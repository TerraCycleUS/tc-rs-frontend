import React, { useState } from 'react'
import {
  useLogin,
  useNotify,
  Notification,
  // TextInput,
  // Form,
  // PasswordInput,
  // useRecordContext,
} from 'react-admin'
// import { useForm, useFormContext } from 'react-hook-form'
import TextField from '@mui/material/TextField'
import classes from './CustomLogin.module.scss'

function CustomLoginForm() {
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [verificationCode, setVerificationCode] = useState('')
  const [isVerificationCodeNeed, setIsVerificationCodeNeed] = useState(false)

  const login = useLogin()
  const notify = useNotify()

  const handleSubmit = (e) => {
    e.preventDefault()
    login({
      email,
      password,
      verificationCode,
    })
      .then(() => {
        notify('Logged in successfully')
      })
      .catch((error) => {
        if (error.message === 'twoFaValidationCodeFail') {
          setVerificationCode('')
          setIsVerificationCodeNeed(true)
        } else {
          notify('Invalid email or password')
        }
      })
  }

  return (
    <form className={classes.wrapper} onSubmit={handleSubmit}>
      <div className={classes.inputWrapper}>
        <TextField
          type="email"
          label="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          fullWidth
        />
      </div>
      <div className={classes.inputWrapper}>
        <TextField
          type="password"
          label="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          fullWidth
        />
      </div>

      {isVerificationCodeNeed && (
        <div className={classes.inputWrapper}>
          <p>To keep your account secure, we verify your identity.</p>
          <p>Enter the code generated by your authenticator app.</p>
          {verificationCode}
          <TextField
            type="text"
            label="Verification Code"
            value={verificationCode}
            onChange={(e) => setVerificationCode(e.target.value)}
            fullWidth
          />
        </div>
      )}

      <button className={classes.signIn} type="submit">
        Sign in
      </button>
    </form>
  )
}

function CustomLoginPage() {
  return (
    <>
      <Notification />
      <CustomLoginForm />
    </>
  )
}

export default CustomLoginPage
