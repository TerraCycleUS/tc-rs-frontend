import React, { useState } from 'react'
import {
  useLogin,
  useNotify,
  Notification,
  TextInput,
  Form,
  PasswordInput,
} from 'react-admin'
import classes from './CustomLogin.module.scss'

import { useForm } from "react-hook-form";


function CustomLoginForm() {
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [verificationCode, setVerificationCode] = useState('')
  const [isVerificationCodeNeed, setIsVerificationCodeNeed] = useState(false)

  const {handleSubmit, setValue, register, formState } = useForm();

  const login = useLogin()
  const notify = useNotify()

  const handleSubmit1 = (e) => {
    login({ email: e.email, password: e.password, verificationCode: e.verificationCode })
      .then(() => {
        notify('Logged in successfully')
      })
      .catch((error) => {
        if (error.message === 'twoFaValidationCodeFail') {
          setValue('verificationCode', '11');
          setIsVerificationCodeNeed(true)
        } else {
          notify('Invalid email or password')
        }
      })
  }

  return (
    <Form className={classes.wrapper} onSubmit={handleSubmit(handleSubmit1)}>
      <div className={classes.inputWrapper}>
        <TextInput
          label="Email"
          source="email"
          name="email"
          value={email}
          onChange={(e) => setValue('email', e.target.value)}
          fullWidth
          register={{...register('email')}}
        />
      </div>
      <div className={classes.inputWrapper}>
        <PasswordInput
          label="Password"
          source="password"
          name="password"
          value={password}
          onChange={(e) => setValue('password', e.target.value)}
          register={{...register('password')}}
          fullWidth
        />
      </div>

      {isVerificationCodeNeed && <div className={classes.inputWrapper}>
        <p>To keep your account secure, we verify your identity.</p>
        <p>Enter the code generated by your authenticator app.</p>
        {verificationCode}
        <TextInput
          label="Verification Code"
          name="verificationCode"
          source='verificationCode'
          onChange={(e) => setValue('verificationCode', e.target.value)}
          register={{...register('verificationCode')}}
          fullWidth
        />
      </div>}

      <button className={classes.signIn} type="submit">
        Sign in
      </button>
    </Form>
  )
}

function CustomLoginPage({ theme }) {
  return (
    <>
      <Notification/>
      <CustomLoginForm/>
    </>
  )
}

export default CustomLoginPage
